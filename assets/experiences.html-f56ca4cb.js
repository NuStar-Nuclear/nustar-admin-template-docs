import{_ as n,p as s,q as a,a1 as e}from"./framework-204010b2.js";const t={},o=e(`<h1 id="一些经验" tabindex="-1"><a class="header-anchor" href="#一些经验" aria-hidden="true">#</a> 一些经验</h1><p>1.<code>data</code>一定要有一个初始值(非<code>undefined</code>, 可以为<code>null</code>)。</p><div class="custom-container danger"><p class="custom-container-title">DANGER</p><p><code>data</code>一定要有一个初始值，不然为非响应式，原因是没初始值的属性为<code>undefined</code>，会被<code>Vue</code>忽略掉，<code>vuex</code>的<code>state</code>同理</p></div><ol start="2"><li>src 中模块的 import 路径以<code>@</code>开头, <code>@</code>是<code>/src</code>的别名。</li></ol><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">import</span> request <span class="token keyword">from</span> <span class="token string">&quot;@/utils/request&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> Foo <span class="token keyword">from</span> <span class="token string">&quot;@/components/Foo.vue&quot;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><ol start="3"><li><p>http 返回状态码大于等于 300 的会被 axios 认为是异常。</p></li><li><p>若想捕捉某个 request 的异常，一定要在末尾再次抛出异常。</p><p>需要这样做的原因是 request 的最外层有一个 errorHandler, 会统一处理一些常见的异常，并将异常追溯打印在 console。</p><p>你的错误捕捉是在这一步之前的。例如：假设你有<code>createUser</code>的 api, 你想在后端验证不通过时在界面弹出消息提醒用户：</p></li></ol><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">import</span> createUser <span class="token keyword">from</span> <span class="token string">&quot;@/api/users&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> Message <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;@/utils/message&quot;</span><span class="token punctuation">;</span>

<span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">submit</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">try</span> <span class="token punctuation">{</span>
    <span class="token keyword">await</span> <span class="token function">createUser</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>e<span class="token punctuation">.</span>response<span class="token punctuation">.</span>status <span class="token operator">===</span> <span class="token number">401</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      Message<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">&quot;没有权限或填写错误&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">throw</span> e<span class="token punctuation">;</span> <span class="token comment">// 抛出异常，如果没有这个，其他错误就会被忽略，导致Debug困难</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,7),p=[o];function c(i,l){return s(),a("div",null,p)}const d=n(t,[["render",c],["__file","experiences.html.vue"]]);export{d as default};
